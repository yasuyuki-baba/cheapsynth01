name: cheapsynth01-tests

on:
  push:
    branches:
      - main  # Only run on pushes to main branch
  pull_request:
    # Run on all pull requests

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxinerama-dev libxrandr-dev libxrender-dev libfontconfig1-dev
      
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake
      
      - name: Setup MSBuild
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.3
      
      - name: Configure and build tests
        run: |
          mkdir -p build_tests
          cd build_tests
          cmake .. -DSTANDALONE_ONLY=ON
          cmake --build . --target CheapSynth01Tests --config Debug
      
      - name: Run tests and generate XML report
        id: run_tests
        run: |
          cd build_tests
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./Tests/CheapSynth01Tests_artefacts/Debug/CheapSynth01Tests.exe --gtest_output=xml:test_results.xml
          else
            ./Tests/CheapSynth01Tests_artefacts/Debug/CheapSynth01Tests --gtest_output=xml:test_results.xml
          fi
          TEST_EXIT_CODE=$?
          echo "Test exit code: $TEST_EXIT_CODE"
          echo "test_exit_code=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "Tests failed with exit code $TEST_EXIT_CODE"
            exit $TEST_EXIT_CODE
          fi
        shell: bash
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ runner.os }}
          path: build_tests/test_results.xml
          
          
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.5.0
        if: runner.os == 'Linux' && always()
        with:
          files: build_tests/test_results.xml
          
      - name: Check test status
        if: steps.run_tests.outputs.test_exit_code != '0'
        run: exit 1
