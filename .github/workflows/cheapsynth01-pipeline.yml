name: cheapsynth01-pipeline

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libgtk-3-dev lv2-dev
          
      - name: Set build type
        shell: bash
        run: |
          if [ "$GITHUB_REF_TYPE" == "tag" ]; then
            echo "BUILD_TYPE=Release" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=Debug" >> $GITHUB_ENV
          fi
          
      - name: Build
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }}
          
      - name: Show
        run: ls -lR ${{github.workspace}}/build
        
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: cheapsynth01-linux
          path: |
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/Standalone/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/VST3/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/CLAP/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/LV2/*
            
      - name: Package for Release
        if: github.ref_type == 'tag'
        run: |
          mkdir -p release-packages
          cd ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-linux-standalone.zip Standalone/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-linux-vst3.zip VST3/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-linux-clap.zip CLAP/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-linux-lv2.zip LV2/
          
      - name: Upload Release Packages
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v4
        with:
          name: cheapsynth01-linux-packages
          path: ${{github.workspace}}/release-packages/*.zip
          retention-days: 5

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Set build type
        shell: bash
        run: |
          if [ "$GITHUB_REF_TYPE" == "tag" ]; then
            echo "BUILD_TYPE=Release" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=Debug" >> $GITHUB_ENV
          fi
          
      - name: Build
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }}
          
      - name: Show
        run: ls -lR ${{github.workspace}}/build
        
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: cheapsynth01-macos
          path: |
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/Standalone/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/VST3/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/AU/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/CLAP/*
            ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}/LV2/*
            
      - name: Package for Release
        if: github.ref_type == 'tag'
        run: |
          mkdir -p release-packages
          cd ${{github.workspace}}/build/CheapSynth01_artefacts/${{ env.BUILD_TYPE }}
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-macos-standalone.zip Standalone/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-macos-vst3.zip VST3/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-macos-au.zip AU/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-macos-clap.zip CLAP/
          zip -r ${{github.workspace}}/release-packages/cheapsynth01-macos-lv2.zip LV2/
          
      - name: Upload Release Packages
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v4
        with:
          name: cheapsynth01-macos-packages
          path: ${{github.workspace}}/release-packages/*.zip
          retention-days: 5

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Set build type
        shell: pwsh
        run: |
          if ("$env:GITHUB_REF_TYPE" -eq "tag") {
            echo "BUILD_TYPE=Release" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            echo "BUILD_TYPE=Debug" | Out-File -FilePath $env:GITHUB_ENV -Append
          }
          
      - name: Verify build directory
        shell: pwsh
        run: |
          $buildDir = Join-Path $env:GITHUB_WORKSPACE "build"
          if (-not (Test-Path $buildDir)) {
            New-Item -Path $buildDir -ItemType Directory -Force
          }
          
      - name: Build
        shell: pwsh
        run: |
          $buildDir = Join-Path $env:GITHUB_WORKSPACE "build"
          cmake -B $buildDir -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build $buildDir --config ${{ env.BUILD_TYPE }}
          
      - name: Show
        shell: pwsh
        run: |
          $buildDir = Join-Path $env:GITHUB_WORKSPACE "build"
          Get-ChildItem -Path $buildDir -Recurse
          
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: cheapsynth01-windows
          path: |
            ${{github.workspace}}\build\CheapSynth01_artefacts\${{ env.BUILD_TYPE }}\Standalone\*
            ${{github.workspace}}\build\CheapSynth01_artefacts\${{ env.BUILD_TYPE }}\VST3\*
            ${{github.workspace}}\build\CheapSynth01_artefacts\${{ env.BUILD_TYPE }}\CLAP\*
            
      - name: Package for Release
        if: github.ref_type == 'tag'
        shell: pwsh
        run: |
          New-Item -Path "release-packages" -ItemType Directory -Force
          $buildDir = Join-Path $env:GITHUB_WORKSPACE "build\CheapSynth01_artefacts\${{ env.BUILD_TYPE }}"
          $releaseDir = Join-Path $env:GITHUB_WORKSPACE "release-packages"
          
          Compress-Archive -Path "$buildDir\Standalone\*" -DestinationPath "$releaseDir\cheapsynth01-windows-standalone.zip" -Force
          Compress-Archive -Path "$buildDir\VST3\*" -DestinationPath "$releaseDir\cheapsynth01-windows-vst3.zip" -Force
          Compress-Archive -Path "$buildDir\CLAP\*" -DestinationPath "$releaseDir\cheapsynth01-windows-clap.zip" -Force
      
      - name: Upload Release Packages
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v4
        with:
          name: cheapsynth01-windows-packages
          path: ${{github.workspace}}\release-packages\*.zip
          retention-days: 5

  create-release:
    needs: [build-linux, build-macos, build-windows]
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Packages
        uses: actions/download-artifact@v4
        with:
          name: cheapsynth01-linux-packages
          path: release-packages
          
      - name: Download macOS Packages
        uses: actions/download-artifact@v4
        with:
          name: cheapsynth01-macos-packages
          path: release-packages
          
      - name: Download Windows Packages
        uses: actions/download-artifact@v4
        with:
          name: cheapsynth01-windows-packages
          path: release-packages
          
      - name: List Packages
        run: ls -la release-packages
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-packages/*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
